replicaCount: 1

# Provided by the app descriptor
image:
  # image: "cumulusprod/cirrocumulus:latest"
  # port: 5000
  # command: ["cirro"]
  # args: ["launch", "/data/dataset1.h5ad", "--host", "0.0.0.0"]
  pullPolicy: IfNotPresent

# Provided by Leo.
# TODO these exist to facilitate the terra-app-local.sh script.
# Would be nice to find a better way.
configs:
  unset0: "unset0"
  unset1: "unset1"
  unset2: "unset2"


# Provided by Leonardo
extraEnv: []
#  - name: WORKSPACE_NAME
#    valueFrom:
#      configMapKeyRef:
#        name: "{{ include "app.fullname" . }}-configs"
#        key: WORKSPACE_NAME

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# TODO: Currently Leonardo sets up the KSA with Workload Identity manually.
# We may want to move that setup to this chart.
serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# Commented fields provided by Leonardo
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    # nginx.ingress.kubernetes.io/auth-tls-secret: "{{ $.Release.Namespace }}/ca-secret"
    # nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    # nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/proxy-redirect-from: "http://k8s.app.info"
    # nginx.ingress.kubernetes.io/proxy-redirect-to: "http://k8s.app.info"
    # nginx.ingress.kubernetes.io/rewrite-target: "/$2"
  hosts:
    - host: "k8s.app.info"
      paths:
        - "/" 
        # - "/app(/|$)(.*)"
  # tls:
    # - secretName: "tls-secret"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Provided by Leonardo
nodeSelector: {}
  # cloud.google.com/gke-nodepool: "nodepool-name"

tolerations: []

affinity: {}

# either GCE PD provided by Leonardo; or hostPath provided by terra-docker-local.sh
persistence:
  enabled: true 
  storageClass: "manual"
  size: 10G
  accessMode: ReadOnlyMany 
  # gcePersistentDisk: "gce-pd-name"
  # hostPath: "/data"
  mountPath: "/data"

